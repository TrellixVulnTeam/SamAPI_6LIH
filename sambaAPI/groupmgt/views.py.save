from django.shortcuts import render

# Create your views here.

from .serializers import grpmgmtserializer
from rest_framework.response import Response
from .models import grpmgmt
from rest_framework import status
import coreapi, coreschema
from rest_framework.schemas import AutoSchema, ManualSchema
from rest_framework.decorators import api_view, renderer_classes,permission_classes, schema

from sambaAPI.services.GrpService import GrpService
from sambaAPI.services.connection import ConnectionService


custom_schema = AutoSchema(manual_fields=[coreapi.Field("name",required=True,location="form",schema=coreschema.String()), coreapi.Field("description",required=True,location="form",schema=coreschema.String()),
coreapi.Field("container",required=True,location="form",schema=coreschema.String()),
	])

@api_view(['GET'])
def list(request, format=None):
    response = GrpService(ConnectionService('exza')).list()
    grps = []
    if response.data is None:
        print(response.description)
        return Response(response.description, status=response.status)
    for msg in response.data:
        print(msg)
        grp = grpmgmt()
        grp.name = msg.get('name')
        grp.description = msg.get('description')
        grp.container = msg.get('container')
        grp.group_type = msg.get('group_type')
        grp.group_scope = msg.get('group_scope')
        grps.append(grp)
    serializer = OrgUnitReportSerializer(grps, many=True)
    return Response(serializer.data,status=status.HTTP_200_OK)


@api_view(['POST'])
def create(request, Format=None):
    response = GrpService(ConnectionService('exza')).list()
    print(request.data)
    grp = grpmgmt()
    if request.data != {}:
        if request.data['name'] != '':
            if request.data['description'] != '':
                
